{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/PROJECT/src/components/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport HighlightedQuote from \"../quotes/HighlightedQuote\";\nimport { Route, useParams, Routes as Switch, Link, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../comments/Comments\";\nimport useHttp from \"../hooks/use-https\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const match = useRouteMatch();\n  const {\n    sendRequest,\n    status,\n    data: loadedQoute,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  const quote = loadedQoute.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/comments`,\n        children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"7PTiF1gwpj5DP7NjbA1CP093XOI=\", false, function () {\n  return [useParams, useRouteMatch, useHttp];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["React","Fragment","useEffect","HighlightedQuote","Route","useParams","Routes","Switch","Link","useRouteMatch","Comments","useHttp","getSingleQuote","QuoteDetail","params","quoteId","match","sendRequest","status","data","loadedQoute","error","quote","find","id","text","author","path","url"],"sources":["/Users/mac/Documents/PROJECT/src/components/pages/QuoteDetail.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport HighlightedQuote from \"../quotes/HighlightedQuote\";\nimport {\n  Route,\n  useParams,\n  Routes as Switch,\n  Link,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport Comments from \"../comments/Comments\";\nimport useHttp from \"../hooks/use-https\";\nimport { getSingleQuote } from \"../lib/api\";\n\nconst QuoteDetail = () => {\n  const params = useParams();\n  const { quoteId } = params;\n  const match = useRouteMatch();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQoute,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const quote = loadedQoute.find(quote => quote.id === params.quoteId);\n  if (!quote) {\n    return <p>No quote found!</p>;\n  }\n  return (\n    <Fragment>\n      <HighlightedQuote text={quote.text} author={quote.author} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n\n      <div>\n        <Route path={`${match.path}/comments`}>\n          <Comments />\n        </Route>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,SACEC,KADF,EAEEC,SAFF,EAGEC,MAAM,IAAIC,MAHZ,EAIEC,IAJF,EAKEC,aALF,QAMO,kBANP;AAOA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAMC,MAAM,GAAGT,SAAS,EAAxB;EACA,MAAM;IAAEU;EAAF,IAAcD,MAApB;EACA,MAAME,KAAK,GAAGP,aAAa,EAA3B;EAEA,MAAM;IACJQ,WADI;IAEJC,MAFI;IAGJC,IAAI,EAAEC,WAHF;IAIJC;EAJI,IAKFV,OAAO,CAACC,cAAD,EAAiB,IAAjB,CALX;EAOAV,SAAS,CAAC,MAAM;IACde,WAAW,CAACF,OAAD,CAAX;EACD,CAFQ,EAEN,CAACE,WAAD,EAAcF,OAAd,CAFM,CAAT;EAIA,MAAMO,KAAK,GAAGF,WAAW,CAACG,IAAZ,CAAiBD,KAAK,IAAIA,KAAK,CAACE,EAAN,KAAaV,MAAM,CAACC,OAA9C,CAAd;;EACA,IAAI,CAACO,KAAL,EAAY;IACV,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,oBACE,QAAC,QAAD;IAAA,wBACE,QAAC,gBAAD;MAAkB,IAAI,EAAEA,KAAK,CAACG,IAA9B;MAAoC,MAAM,EAAEH,KAAK,CAACI;IAAlD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MAAO,IAAI,EAAEV,KAAK,CAACW,IAAnB;MAAyB,KAAK,MAA9B;MAAA,uBACE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE,QAAC,IAAD;UAAM,SAAS,EAAC,WAAhB;UAA4B,EAAE,EAAG,GAAEX,KAAK,CAACY,GAAI,WAA7C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,eAUE;MAAA,uBACE,QAAC,KAAD;QAAO,IAAI,EAAG,GAAEZ,KAAK,CAACW,IAAK,WAA3B;QAAA,uBACE,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAtCD;;GAAMd,W;UACWR,S,EAEDI,a,EAOVE,O;;;KAVAE,W;AAwCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}