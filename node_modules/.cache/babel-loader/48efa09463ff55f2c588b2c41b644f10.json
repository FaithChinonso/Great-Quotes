{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/PROJECT/src/components/comments/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../hooks/use-https\";\nimport { getAllComments } from \"../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"../comments/CommentsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const onAddedCommentHandler = () => {\n    let comments;\n\n    if (status === \"pending\") {\n      comments = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n      comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n        comments: loadedComments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 18\n      }, this);\n    }\n\n    if (status === \"completed\" && !loadedComments && loadedComments.length === 0) {\n      comments = /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"centered\",\n        children: \"No comments were added yet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 18\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.comments,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: startAddCommentHandler,\n        children: \"Add a Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n        quoteId: quoteId,\n        onAddedComment: onAddedCommentHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), comments]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  };\n};\n\n_s(Comments, \"oTYmLyIqgQIy/H9X8mxEcyELwnw=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useEffect","useState","useParams","classes","NewCommentForm","useHttp","getAllComments","LoadingSpinner","CommentsList","Comments","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","data","loadedComments","startAddCommentHandler","onAddedCommentHandler","comments","length"],"sources":["/Users/mac/Documents/PROJECT/src/components/comments/Comments.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../hooks/use-https\";\nimport { getAllComments } from \"../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"../comments/CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const onAddedCommentHandler = () => {\n    let comments;\n    if (status === \"pending\") {\n      comments = (\n        <div className=\"centered\">\n          {\" \"}\n          <LoadingSpinner />\n        </div>\n      );\n    }\n    if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n      comments = <CommentsList comments={loadedComments} />;\n    }\n    if (\n      status === \"completed\" &&\n      !loadedComments &&\n      loadedComments.length === 0\n    ) {\n      comments = <p className=\"centered\">No comments were added yet!</p>;\n    }\n\n    return (\n      <section className={classes.comments}>\n        <h2>User Comments</h2>\n        {!isAddingComment && (\n          <button className=\"btn\" onClick={startAddCommentHandler}>\n            Add a Comment\n          </button>\n        )}\n        {isAddingComment && (\n          <NewCommentForm\n            quoteId={quoteId}\n            onAddedComment={onAddedCommentHandler}\n          />\n        )}\n        {comments}\n      </section>\n    );\n  };\n};\n\nexport default Comments;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAMW,MAAM,GAAGV,SAAS,EAAxB;EACA,MAAM;IAAEW;EAAF,IAAcD,MAApB;EACA,MAAM;IAAEE,WAAF;IAAeC,MAAf;IAAuBC,IAAI,EAAEC;EAA7B,IAAgDZ,OAAO,CAACC,cAAD,CAA7D;EAEAN,SAAS,CAAC,MAAM;IACdc,WAAW,CAACD,OAAD,CAAX;EACD,CAFQ,EAEN,CAACA,OAAD,EAAUC,WAAV,CAFM,CAAT;;EAGA,MAAMI,sBAAsB,GAAG,MAAM;IACnCP,kBAAkB,CAAC,IAAD,CAAlB;EACD,CAFD;;EAIA,MAAMQ,qBAAqB,GAAG,MAAM;IAClC,IAAIC,QAAJ;;IACA,IAAIL,MAAM,KAAK,SAAf,EAA0B;MACxBK,QAAQ,gBACN;QAAK,SAAS,EAAC,UAAf;QAAA,WACG,GADH,eAEE,QAAC,cAAD;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAMD;;IACD,IAAIL,MAAM,KAAK,WAAX,IAA0BE,cAA1B,IAA4CA,cAAc,CAACI,MAAf,GAAwB,CAAxE,EAA2E;MACzED,QAAQ,gBAAG,QAAC,YAAD;QAAc,QAAQ,EAAEH;MAAxB;QAAA;QAAA;QAAA;MAAA,QAAX;IACD;;IACD,IACEF,MAAM,KAAK,WAAX,IACA,CAACE,cADD,IAEAA,cAAc,CAACI,MAAf,KAA0B,CAH5B,EAIE;MACAD,QAAQ,gBAAG;QAAG,SAAS,EAAC,UAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAX;IACD;;IAED,oBACE;MAAS,SAAS,EAAEjB,OAAO,CAACiB,QAA5B;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAEG,CAACV,eAAD,iBACC;QAAQ,SAAS,EAAC,KAAlB;QAAwB,OAAO,EAAEQ,sBAAjC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ,EAOGR,eAAe,iBACd,QAAC,cAAD;QACE,OAAO,EAAEG,OADX;QAEE,cAAc,EAAEM;MAFlB;QAAA;QAAA;QAAA;MAAA,QARJ,EAaGC,QAbH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAiBD,CAtCD;AAuCD,CApDD;;GAAMX,Q;UAEWP,S,EAEuCG,O;;;KAJlDI,Q;AAsDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}